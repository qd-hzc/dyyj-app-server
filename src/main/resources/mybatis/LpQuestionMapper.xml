<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzc.top.dao.LpQuestionMapper">
    <resultMap id="BaseResultMap" type="com.hzc.top.model.LpQuestion">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="seq" property="seq" jdbcType="INTEGER"/>
        <result column="category_code" property="categoryCode" jdbcType="VARCHAR"/>
        <result column="material_id" property="materialId" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="knowledge_point" property="knowledgePoint" jdbcType="VARCHAR"/>
        <result column="chapter" property="chapter" jdbcType="VARCHAR"/>
        <result column="parser_video_id" property="parserVideoId" jdbcType="INTEGER"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>
        <result column="answer_time" property="answerTime" jdbcType="INTEGER"/>
        <result column="collect_time" property="collectTime" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, seq, category_code, material_id, type, name, knowledge_point, chapter, parser_video_id, 
    source, answer_time, collect_time
  </sql>
    <sql id="Base_Column_List_As">
        id questionId, seq, category_code category, `type`, `name`, source, answer_time answerTime, collect_time collectTime
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from lp_question
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lp_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.hzc.top.model.LpQuestion">
    insert into lp_question (id, seq, category_code, 
      material_id, type, name, 
      knowledge_point, chapter, parser_video_id, 
      source, answer_time, collect_time
      )
    values (#{id,jdbcType=INTEGER}, #{seq,jdbcType=INTEGER}, #{categoryCode,jdbcType=VARCHAR}, 
      #{materialId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{knowledgePoint,jdbcType=VARCHAR}, #{chapter,jdbcType=VARCHAR}, #{parserVideoId,jdbcType=INTEGER}, 
      #{source,jdbcType=VARCHAR}, #{answerTime,jdbcType=INTEGER}, #{collectTime,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.hzc.top.model.LpQuestion">
        insert into lp_question
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="seq != null">
                seq,
            </if>
            <if test="categoryCode != null">
                category_code,
            </if>
            <if test="materialId != null">
                material_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="knowledgePoint != null">
                knowledge_point,
            </if>
            <if test="chapter != null">
                chapter,
            </if>
            <if test="parserVideoId != null">
                parser_video_id,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="answerTime != null">
                answer_time,
            </if>
            <if test="collectTime != null">
                collect_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="seq != null">
                #{seq,jdbcType=INTEGER},
            </if>
            <if test="categoryCode != null">
                #{categoryCode,jdbcType=VARCHAR},
            </if>
            <if test="materialId != null">
                #{materialId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="knowledgePoint != null">
                #{knowledgePoint,jdbcType=VARCHAR},
            </if>
            <if test="chapter != null">
                #{chapter,jdbcType=VARCHAR},
            </if>
            <if test="parserVideoId != null">
                #{parserVideoId,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                #{source,jdbcType=VARCHAR},
            </if>
            <if test="answerTime != null">
                #{answerTime,jdbcType=INTEGER},
            </if>
            <if test="collectTime != null">
                #{collectTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hzc.top.model.LpQuestion">
        update lp_question
        <set>
            <if test="seq != null">
                seq = #{seq,jdbcType=INTEGER},
            </if>
            <if test="categoryCode != null">
                category_code = #{categoryCode,jdbcType=VARCHAR},
            </if>
            <if test="materialId != null">
                material_id = #{materialId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="knowledgePoint != null">
                knowledge_point = #{knowledgePoint,jdbcType=VARCHAR},
            </if>
            <if test="chapter != null">
                chapter = #{chapter,jdbcType=VARCHAR},
            </if>
            <if test="parserVideoId != null">
                parser_video_id = #{parserVideoId,jdbcType=INTEGER},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=VARCHAR},
            </if>
            <if test="answerTime != null">
                answer_time = #{answerTime,jdbcType=INTEGER},
            </if>
            <if test="collectTime != null">
                collect_time = #{collectTime,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hzc.top.model.LpQuestion">
    update lp_question
    set seq = #{seq,jdbcType=INTEGER},
      category_code = #{categoryCode,jdbcType=VARCHAR},
      material_id = #{materialId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      knowledge_point = #{knowledgePoint,jdbcType=VARCHAR},
      chapter = #{chapter,jdbcType=VARCHAR},
      parser_video_id = #{parserVideoId,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      answer_time = #{answerTime,jdbcType=INTEGER},
      collect_time = #{collectTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectForAnswerCardList" resultType="com.hzc.top.vo.AnswerCardVO">
        select
            lc.ctype collectionType,
            lq.id questionId,
            laa.collect_time collectTime,
            laa.answer_time answerTime,
            laa.user_id userId,
            lq.type,
            laa.update_time updateTime,
            lq.seq seq,
            lq.category_code categoryCode,
            lq.source source
        from
            lp_question lq
                left join
            (select
                la . *
            from
                lp_answer la
            where
                la.user_id = #{userId} and la.deleted = 1) laa ON lq.id = laa.question_id
                left join
            (select
                lpc.type ctype, lpc.question_id
            from
                lp_collection lpc
            where
                lpc.type = 1 and lpc.user_id = #{userId}) lc ON lc.question_id = lq.id
    </select>
    <select id="selectByPrimaryKeyForUser" resultType="com.hzc.top.vo.QuestionVO">
        select
            lq.id questionId,
            laa.collect_time collectTime,
            laa.answer_time answerTime,
            laa.user_id userId,
            lq.type,
            laa.update_time updateTime,
            lq.seq seq,
            lq.category_code categoryCode,
            lq.name name,
            lq.source source,
            lc.ctype collectionType
        from
            lp_question lq
                left join
            (select
                la . *
            from
                lp_answer la
            where
                la.user_id = #{userId} and la.deleted = 1) laa ON lq.id = laa.question_id
                left join
            (select
                lpc.type ctype, lpc.question_id
            from
                lp_collection lpc
            where
                lpc.type = 1 and lpc.user_id = #{userId}
                    and question_id = #{questionId}) lc ON lc.question_id = lq.id
        where lq.id = #{questionId}
    </select>
    <select id="selectAllQuestionForLimit" resultType="com.hzc.top.vo.QuestionVO">
        select
        <include refid="Base_Column_List_As"/>
        FROM
        lp_question
        limit #{currentNum},#{pageSize}
    </select>
    <select id="selectByType" resultType="com.hzc.top.vo.AnswerCardVO">
        select
         lq.id questionId,
        laa.collect_time collectTime,
        laa.answer_time answerTime,
        #{userId} userId,
        lq.type,
        lq.seq seq,
        lq.category_code categoryCode
        from
        lp_question lq
        left join
        (select
        la.collect_time,la.answer_time,la.question_id
        from
        lp_answer la
        where
        la.user_id = #{userId} and la.deleted = 1) laa ON lq.id = laa.question_id
        left join
        (select
        lpc.type ctype, lpc.question_id
        from
        lp_collection lpc
        where
        lpc.type = 1 and lpc.user_id = #{userId}) lc ON lc.question_id = lq.id where lq.type=#{type}
    </select>
    <select id="selectByTypeOptimize" resultType="map">
        select
        lq.id questionId,
        laa.collect_time collectTime,
        laa.answer_time answerTime,
        lq.seq seq
        from
        lp_question lq
        left join
        (select
        la.collect_time,la.answer_time,la.question_id
        from
        lp_answer la
        where
        la.user_id = #{userId} and la.deleted = 1) laa ON lq.id = laa.question_id
        left join
        (select
        lpc.type ctype, lpc.question_id
        from
        lp_collection lpc
        where
        lpc.type = 1 and lpc.user_id = #{userId}) lc ON lc.question_id = lq.id where lq.type=#{type}
    </select>

</mapper>